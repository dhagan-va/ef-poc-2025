// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using X12EDI.Data.DBContext;

#nullable disable

namespace X12EDI.Data.Migrations
{
    [DbContext(typeof(EdiDbContext))]
    partial class EdiDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("X12EDI.Data.Entities.EdiEnvelope", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CodeIdentifyingInformationType")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EdiFileId")
                        .HasColumnType("int");

                    b.Property<string>("GroupControlNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("InterchangeControlNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiverId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SenderId")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("EdiFileId")
                        .IsUnique();

                    b.ToTable("EdiEnvelope");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiError", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("EdiFileId")
                        .HasColumnType("int");

                    b.Property<string>("Message")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("EdiFileId");

                    b.ToTable("EdiErrors");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiFile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Identifier")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("IngestedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("EdiFiles");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiTransaction", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Checksum")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ControlNumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("EdiFileId")
                        .HasColumnType("int");

                    b.Property<string>("Raw")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TransactionType")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Checksum")
                        .IsUnique()
                        .HasFilter("[Checksum] IS NOT NULL");

                    b.HasIndex("EdiFileId");

                    b.ToTable("EdiTransactions");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiEnvelope", b =>
                {
                    b.HasOne("X12EDI.Data.Entities.EdiFile", "EdiFile")
                        .WithOne("Envelope")
                        .HasForeignKey("X12EDI.Data.Entities.EdiEnvelope", "EdiFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EdiFile");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiError", b =>
                {
                    b.HasOne("X12EDI.Data.Entities.EdiFile", "EdiFile")
                        .WithMany("Errors")
                        .HasForeignKey("EdiFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EdiFile");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiTransaction", b =>
                {
                    b.HasOne("X12EDI.Data.Entities.EdiFile", "EdiFile")
                        .WithMany("Transactions")
                        .HasForeignKey("EdiFileId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("EdiFile");
                });

            modelBuilder.Entity("X12EDI.Data.Entities.EdiFile", b =>
                {
                    b.Navigation("Envelope");

                    b.Navigation("Errors");

                    b.Navigation("Transactions");
                });
#pragma warning restore 612, 618
        }
    }
}
